# -*- coding: utf-8 -*-
"""Untitled37.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w400t_1DsI_pc-zd8RB8vUH6P94u0haa
"""

import yfinance as yf
import streamlit as st  
import pandas as pd
import random
import matplotlib.pyplot as plt
import plotly.figure_factory as ff
import numpy as np
import datetime


def get_data(stocks_symbols, start):
    portafolio = pd.DataFrame()
    for i, stock in enumerate(stocks_symbols):
        portafolio[stock] = yf.Ticker(stock).history(period="max")["Close"].sort_index().loc[start:]
    return portafolio

st.title('PROYECTO FINAL --> DEEP LEARNING EN MERCADOS FINANCIEROS?')


#Elegimos nuestras acciones, en este caso serán APPLE, MICROSOFT, AMAZON y GOOGLE
stocks_symbols = ['NVR', 'GOOGL', 'AZO', 'CMG', 'MTD', 'TSLA', 'BLK', 'EQIX', 'ORLY', 'REGN', 'TDG', 'AVGO', 'SIVB', 'CHTR', 'NOW']
df = get_data(stocks_symbols, "01-01-2021")

genre = st.radio(
  
     "Que quieres hacer",
     ('Historico de activos', 'Los precios de hoy', 'Porcentaje que debo invertir en cada acción'))

if genre == 'Historico de activos':
      modo = st.radio(
        "En que formato las quieres",
        ('Serie de tiempo', 'DataFrame'))
      if modo == 'DataFrame':
            "Asi se ven los datos con los que trabajaremos , tenemos DF de 15 activos "    
            st.write(df)

      else:

            
            options = st.multiselect(
            'Dame activos a evaluar',
            ['NVR', 'GOOGL', 'AZO', 'CMG', 'MTD', 'TSLA', 'BLK', 'EQIX', 'ORLY', 'REGN', 'TDG', 'AVGO', 'SIVB', 'CHTR', 'NOW'],
            ['NVR', 'GOOGL', 'AZO', 'CMG', 'MTD', 'TSLA', 'BLK', 'EQIX', 'ORLY', 'REGN', 'TDG', 'AVGO', 'SIVB', 'CHTR', 'NOW'])
            st.line_chart(df[options])






def get_data2(stocks_symbols):
    portafolio = pd.DataFrame()
    for i, stock in enumerate(stocks_symbols):
        portafolio[stock] = yf.Ticker(stock).history(period="max")["Close"].sort_index()
    return portafolio.iloc[-1]


if genre == 'Los precios de hoy':

      df2 = get_data2(stocks_symbols)
      st.write(df2)

      option = st.selectbox(
        'Selecciona un activo ',
        ('NVR', 'GOOGL', 'AZO', 'CMG', 'MTD', 'TSLA', 'BLK', 'EQIX', 'ORLY', 'REGN', 'TDG', 'AVGO', 'SIVB', 'CHTR', 'NOW'))


  #st.pyplot(df2)
      st.metric(label=option, value=df2[option])

if genre == 'Porcentaje que debo invertir en cada acción':
      np.random.seed(1234)
      stocks_symbols = ['NVR', 'GOOGL', 'AZO', 'CMG', 'MTD', 'TSLA', 'BLK', 'EQIX', 'ORLY', 'REGN', 'TDG', 'AVGO', 'SIVB', 'CHTR', 'NOW']
      n = len(stocks_symbols)
      a = np.random.uniform(size = n)
      sum = np.sum(a)
      a = a/sum
      np.sum(a)

      pesos = pd.DataFrame()
      pesos['acciones'] = stocks_symbols
      pesos['weights'] = a
      pesos.set_index('acciones',inplace = True)




      st.write(pesos)